name: Scap driver toolchains update
on:
  push:
    branches: [dev]
    paths: ['docker/scap-driver-toolchains/**']

jobs:
  base:
    env:
      REGISTRY: ghcr.io
      IMAGE: ghcr.io/draios/scap-driver-toolchains-base

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check if changed
        id: changed
        uses: tj-actions/changed-files@v10.1
        with:
          files: |
            ^docker/scap-driver-toolchains/base

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build new scap-driver-toolchains-base
        id: build
        if: steps.changed.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: docker/scap-driver-toolchains/base
          tags: ${{ format('{0}:dev,{0}:{1}', env.IMAGE, github.sha) }}
          push: true

  update-image:
    needs: base
    strategy:
      matrix:
        artifact: [ tools, llvm-7, gcc-5, gcc-6, gcc-7, gcc-8, gcc-9, gcc-10, gcc-12 ]

    env:
      REGISTRY: ghcr.io
      IMAGE: ghcr.io/draios/scap-driver-toolchains-${{ matrix.artifact }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check if changed
        id: changed
        uses: tj-actions/changed-files@v10.1
        with:
          files: |
            ^docker/scap-driver-toolchains/${{ matrix.artifact }}

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build new scap-driver-toolchains-${{ matrix.artifact }}
        id: build
        if: steps.changed.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: docker/scap-driver-toolchains/${{ matrix.artifact }}
          tags: ${{ format('{0}:dev,{0}:{1}', env.IMAGE, github.sha) }}
          push: true
